{"ast":null,"code":"var _jsxFileName = \"/Users/KevinEleven/git/movie-picker/frontend/src/components/movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movie\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = props => {\n  _s();\n\n  const initialMovieState = {\n    id: null,\n    title: \"\",\n    directors: [],\n    genre: [],\n    reviews: []\n  };\n  const [movie, setMovie] = useState(initialMovieState);\n\n  const getMovie = id => {\n    MovieDataService.get(id).then(response => {\n      setMovie(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getMovie(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const deleteReview = (reviewId, index) => {\n    MovieDataService.deleteReview(reviewId, props.user.id).then(response => {\n      setMovie(prevState => {\n        prevState.reviews.splice(index, 1);\n        return { ...prevState\n        };\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Director: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), movie.directors, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genre: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), movie.genres, console.log(review)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/movies/\" + props.match.params.id + \"/review\",\n        className: \"btn btn-primary\",\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Reviews \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movie.reviews.length > 0 ? movie.reviews.map((review, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-4 pb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [review.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 66\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"User: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 53\n                  }, this), review.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 89\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Date: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 53\n                  }, this), review.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 89\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Rating: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 53\n                  }, this), review.star, \"/5\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 49\n                }, this), props.user && props.user.id === review.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: () => deleteReview(review._id, index),\n                    className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: \"/movies/\" + props.match.params.id + \"/review\",\n                      state: {\n                        currentReview: review\n                      }\n                    },\n                    className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No reviews yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movie selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"ErcYvvLGVzz/SM8JFsOu5/V9IMI=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/KevinEleven/git/movie-picker/frontend/src/components/movies.js"],"names":["React","useState","useEffect","MovieDataService","Link","Movie","props","initialMovieState","id","title","directors","genre","reviews","movie","setMovie","getMovie","get","then","response","data","catch","e","console","log","match","params","deleteReview","reviewId","index","user","prevState","splice","genres","review","length","map","text","name","date","star","user_id","_id","pathname","state","currentReview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movie\";\nimport { Link } from \"react-router-dom\";\n\nconst Movie = props => {\n    const initialMovieState = {\n        id: null,\n        title: \"\",\n        directors: [],\n        genre: [],\n        reviews: []\n    };\n    const [movie, setMovie] = useState(initialMovieState);\n\n    const getMovie = id => {\n        MovieDataService.get(id)\n            .then(response => {\n                setMovie(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getMovie(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const deleteReview = (reviewId, index) => {\n        MovieDataService.deleteReview(reviewId, props.user.id)\n            .then(response => {\n                setMovie((prevState) => {\n                    prevState.reviews.splice(index, 1)\n                    return ({\n                        ...prevState\n                    })\n                })\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div>\n            {movie ? (\n                <div>\n                    <h5>{movie.title}</h5>\n                    <p>\n                        <strong>Director: </strong>{movie.directors}<br />\n                        <strong>Genre: </strong>{movie.genres}\n                        {console.log(review)}\n                    </p>\n                    <Link to={\"/movies/\" + props.match.params.id + \"/review\"} className=\"btn btn-primary\">\n                        Add Review\n                    </Link>\n                    <h4> Reviews </h4>\n                    <div className=\"row\">\n                        {movie.reviews.length > 0 ? (\n                            movie.reviews.map((review, index) => {\n                                return (\n                                    <div className=\"col-lg-4 pb-1\" key={index}>\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">\n                                                <p className=\"card-text\">\n                                                    {review.text}<br />\n                                                    <strong>User: </strong>{review.name}<br />\n                                                    <strong>Date: </strong>{review.date}<br />\n                                                    <strong>Rating: </strong>{review.star}/5\n\n                                                </p>\n                                                {props.user && props.user.id === review.user_id &&\n                                                    <div className=\"row\">\n                                                        <a onClick={() => deleteReview(review._id, index)} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Delete</a>\n                                                        <Link to={{\n                                                            pathname: \"/movies/\" + props.match.params.id + \"/review\",\n                                                            state: {\n                                                                currentReview: review\n                                                            }\n                                                        }} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Edit</Link>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })\n                        ) : (\n                            <div className=\"col-sm-4\">\n                                <p>No reviews yet.</p>\n                            </div>\n                        )}\n\n                    </div>\n\n                </div>\n            ) : (\n                <div>\n                    <br />\n                    <p>No Movie selected.</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}