[{"/Users/KevinEleven/git/movie-picker/frontend/src/index.js":"1","/Users/KevinEleven/git/movie-picker/frontend/src/reportWebVitals.js":"2","/Users/KevinEleven/git/movie-picker/frontend/src/App.js":"3","/Users/KevinEleven/git/movie-picker/frontend/src/components/movies-list.js":"4","/Users/KevinEleven/git/movie-picker/frontend/src/components/login.js":"5","/Users/KevinEleven/git/movie-picker/frontend/src/components/add-review.js":"6","/Users/KevinEleven/git/movie-picker/frontend/src/components/movies.js":"7","/Users/KevinEleven/git/movie-picker/frontend/src/services/movie.js":"8","/Users/KevinEleven/git/movie-picker/frontend/src/http-common.js":"9"},{"size":260,"mtime":1628217452755,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1628022725446,"results":"12","hashOfConfig":"11"},{"size":1907,"mtime":1628217161318,"results":"13","hashOfConfig":"11"},{"size":5754,"mtime":1628389019009,"results":"14","hashOfConfig":"11"},{"size":1594,"mtime":1628380742857,"results":"15","hashOfConfig":"11"},{"size":3254,"mtime":1628392810672,"results":"16","hashOfConfig":"11"},{"size":4182,"mtime":1628392351875,"results":"17","hashOfConfig":"11"},{"size":720,"mtime":1628381798119,"results":"18","hashOfConfig":"11"},{"size":169,"mtime":1628228578165,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ahxvb6",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/KevinEleven/git/movie-picker/frontend/src/index.js",[],["42","43"],"/Users/KevinEleven/git/movie-picker/frontend/src/reportWebVitals.js",[],["44","45"],"/Users/KevinEleven/git/movie-picker/frontend/src/App.js",["46"],"import React from \"react\"\nimport { Switch, Route, Link } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nimport AddReview from \"./components/add-review\"\nimport Movie from \"./components/movies\"\nimport MoviesList from \"./components/movies-list\"\nimport Login from \"./components/login\"\n\nfunction App() {\n  const [user, setUser] = React.useState(null);\n\n  async function login(user = null) {\n    setUser(user);\n  }\n\n  async function logout() {\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/movies\" className=\"navbar-brand\">\n          Movie Reviews\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/movies\"} className=\"nav-link\">\n              Movies\n            </Link>\n          </li>\n          <li className=\"nav-item\" >\n            {user ? (\n              <a onClick={logout} className=\"nav-link\" style={{ cursor: 'pointer' }}>\n                Logout {user.name}\n              </a>\n            ) : (\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            )}\n\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/movies\"]} component={MoviesList} />\n          <Route\n            path=\"/movies/:id/review\"\n            render={(props) => (\n              <AddReview {...props} user={user} />\n            )}\n          />\n          <Route\n            path=\"/movies/:id\"\n            render={(props) => (\n              <Movie {...props} user={user} />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            render={(props) => (\n              <Login {...props} login={login} />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/KevinEleven/git/movie-picker/frontend/src/components/movies-list.js",[],"/Users/KevinEleven/git/movie-picker/frontend/src/components/login.js",[],"/Users/KevinEleven/git/movie-picker/frontend/src/components/add-review.js",[],"/Users/KevinEleven/git/movie-picker/frontend/src/components/movies.js",["47"],"import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movie\";\nimport { Link } from \"react-router-dom\";\n\nconst Movie = props => {\n    const initialMovieState = {\n        id: null,\n        title: \"\",\n        directors: [],\n        genre: [],\n        reviews: []\n    };\n    const [movie, setMovie] = useState(initialMovieState);\n\n    const getMovie = id => {\n        MovieDataService.get(id)\n            .then(response => {\n                setMovie(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getMovie(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const deleteReview = (reviewId, index) => {\n        MovieDataService.deleteReview(reviewId, props.user.id)\n            .then(response => {\n                setMovie((prevState) => {\n                    prevState.reviews.splice(index, 1)\n                    return ({\n                        ...prevState\n                    })\n                })\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div>\n            {movie ? (\n                <div>\n                    <h5>{movie.title}</h5>\n                    <p>\n                        <strong>Director: </strong>{movie.directors}<br />\n                        <strong>Genre: </strong>{movie.genres}\n                    </p>\n                    <Link to={\"/movies/\" + props.match.params.id + \"/review\"} className=\"btn btn-primary\">\n                        Add Review\n                    </Link>\n                    <h4> Reviews </h4>\n                    <div className=\"row\">\n                        {movie.reviews.length > 0 ? (\n                            movie.reviews.map((review, index) => {\n                                return (\n                                    <div className=\"col-lg-4 pb-1\" key={index}>\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">\n                                                <p className=\"card-text\">\n                                                    {review.text}<br />\n                                                    <strong>User: </strong>{review.name}<br />\n                                                    <strong>Date: </strong>{review.date}<br />\n                                                    <strong>Rating: </strong>{review.star}/5\n\n                                                </p>\n                                                {props.user && props.user.id === review.user_id &&\n                                                    <div className=\"row\">\n                                                        <a onClick={() => deleteReview(review._id, index)} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Delete</a>\n                                                        <Link to={{\n                                                            pathname: \"/movies/\" + props.match.params.id + \"/review\",\n                                                            state: {\n                                                                currentReview: review\n                                                            }\n                                                        }} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Edit</Link>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })\n                        ) : (\n                            <div className=\"col-sm-4\">\n                                <p>No reviews yet.</p>\n                            </div>\n                        )}\n\n                    </div>\n\n                </div>\n            ) : (\n                <div>\n                    <br />\n                    <p>No Movie selected.</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Movie;","/Users/KevinEleven/git/movie-picker/frontend/src/services/movie.js",[],"/Users/KevinEleven/git/movie-picker/frontend/src/http-common.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":36,"column":15,"nodeType":"56","endLine":36,"endColumn":86},{"ruleId":"54","severity":1,"message":"55","line":73,"column":57,"nodeType":"56","endLine":73,"endColumn":155},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]